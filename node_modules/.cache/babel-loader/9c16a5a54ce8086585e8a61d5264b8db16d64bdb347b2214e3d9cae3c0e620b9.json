{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ydy97\\\\OneDrive\\\\Documents\\\\\\uCE74\\uCE74\\uC624\\uD1A1 \\uBC1B\\uC740 \\uD30C\\uC77C\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\1.basic\\\\q1.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n  문제1\r\n  useState 및 styled-components에 관련한 문제입니다.\r\n  아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n      1-1 )\r\n      문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n      초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n      붉은색 글씨로 노출됩니다\r\n      \r\n    1-2 )\r\n      문제1-2는 보이기 버튼을 누른다면\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n      아래 보이는 p태그가 보여야합니다.\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n      p태그는 보이지 않아야합니다\r\n  */\n  const [input, setInput] = useState(false);\n  const textRef = useRef(null);\n  const handleOnChange = e => {\n    const {\n      value,\n      placeholder\n    } = e.target;\n    if (placeholder == value) {\n      setInput(true);\n      handleCheck();\n    } else if (placeholder !== value) {\n      setInput(false);\n      handleCheck();\n    }\n  };\n  const handleCheck = e => {\n    if (input) {\n      e.target.innerText = '올바르게 입력하였습니다';\n    }\n    if (!input) {\n      return e.target.innerText = '올바르지 않습니다.';\n    }\n  };\n  // const handleChangeColor = (e) => {\n  //     if (input == e.target.placeholder) {\n  //     } else if (input !== e.target.placeholder) {\n  //         textRef.current.style.color = 'red';\n  //         textRef.current.innerText = '올바르게 글을 작성해주세요';\n  //     }\n  // };\n  const [form, setForm] = useState(false);\n  // const pRef = useRef(null);\n\n  const handleClickForm = e => {\n    setForm(form => !form);\n    handleChangeText(e);\n  };\n  const handleChangeText = e => {\n    if (form) {\n      e.target.innerText = '보이기';\n    } else {\n      e.target.innerText = '숨기기';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: '김성용',\n        style: {\n          textAlign: 'center'\n        },\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        value: input,\n        onChange: handleCheck,\n        children: \"\\uC62C\\uBC14\\uB974\\uAC8C \\uC785\\uB825\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        /*ref={pRef}*/onClick: handleClickForm,\n        children: \"\\uBCF4\\uC774\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), form ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"bdGJP6OWvEGq+2CR1dYlQrIfXGk=\");\n_c = Q1;\nexport default Q1;\nconst Message = styled.p`\n    color: ${_ref => {\n  let {\n    value\n  } = _ref;\n  return value ? 'green' : 'red';\n}};\n`;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["useRef","useState","styled","Q1","input","setInput","textRef","handleOnChange","e","value","placeholder","target","handleCheck","innerText","form","setForm","handleClickForm","handleChangeText","textAlign","Message","p","S"],"sources":["C:/Users/ydy97/OneDrive/Documents/카카오톡 받은 파일/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Q1() {\r\n    /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n  \r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n        \r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n    const [input, setInput] = useState(false);\r\n    const textRef = useRef(null);\r\n    const handleOnChange = (e) => {\r\n        const { value, placeholder } = e.target;\r\n        if (placeholder == value) {\r\n            setInput(true);\r\n            handleCheck();\r\n        } else if (placeholder !== value) {\r\n            setInput(false);\r\n            handleCheck();\r\n        }\r\n    };\r\n\r\n    const handleCheck = (e) => {\r\n        if (input) {\r\n            e.target.innerText = '올바르게 입력하였습니다';\r\n        }\r\n        if (!input) {\r\n            return (e.target.innerText = '올바르지 않습니다.');\r\n        }\r\n    };\r\n    // const handleChangeColor = (e) => {\r\n    //     if (input == e.target.placeholder) {\r\n    //     } else if (input !== e.target.placeholder) {\r\n    //         textRef.current.style.color = 'red';\r\n    //         textRef.current.innerText = '올바르게 글을 작성해주세요';\r\n    //     }\r\n    // };\r\n    const [form, setForm] = useState(false);\r\n    // const pRef = useRef(null);\r\n\r\n    const handleClickForm = (e) => {\r\n        setForm((form) => !form);\r\n        handleChangeText(e);\r\n    };\r\n    const handleChangeText = (e) => {\r\n        if (form) {\r\n            e.target.innerText = '보이기';\r\n        } else {\r\n            e.target.innerText = '숨기기';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <div>\r\n                <h2>문제1-1.</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={'김성용'}\r\n                    style={{ textAlign: 'center' }}\r\n                    onChange={handleOnChange}\r\n                />\r\n                <S.Message value={input} onChange={handleCheck}>\r\n                    올바르게 입력하셨습니다\r\n                </S.Message>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>문제1-2. </h2>\r\n                <button /*ref={pRef}*/ onClick={handleClickForm}>보이기</button>\r\n                {form ? (\r\n                    <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>\r\n                ) : (\r\n                    <p></p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n    color: ${({ value }) => (value ? 'green' : 'red')};\r\n`;\r\n\r\nconst S = {\r\n    Message,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}