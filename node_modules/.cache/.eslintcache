[{"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\index.js":"1","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\reportWebVitals.js":"2","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\App.js":"3","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\Hooks.js":"4","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\State.js":"5","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\Detail.js":"6","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state1.js":"7","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q3.js":"8","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q2.js":"9","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q1.js":"10","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state3.js":"11","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state2.js":"12","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\1.basic\\q3components.js":"13","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\2.state\\comment.js":"14","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\2.state\\product.js":"15","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\Music\\List.js":"16","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\useInputs.js":"17","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\useInput.js":"18"},{"size":535,"mtime":1676150996000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1676150996000,"results":"21","hashOfConfig":"20"},{"size":689,"mtime":1678442259840,"results":"22","hashOfConfig":"20"},{"size":644,"mtime":1676438834000,"results":"23","hashOfConfig":"20"},{"size":545,"mtime":1676438928000,"results":"24","hashOfConfig":"20"},{"size":4506,"mtime":1678444420795,"results":"25","hashOfConfig":"20"},{"size":2183,"mtime":1678439558372,"results":"26","hashOfConfig":"20"},{"size":2251,"mtime":1677408554526,"results":"27","hashOfConfig":"20"},{"size":2000,"mtime":1677166540960,"results":"28","hashOfConfig":"20"},{"size":3264,"mtime":1677166693173,"results":"29","hashOfConfig":"20"},{"size":2673,"mtime":1678443265201,"results":"30","hashOfConfig":"20"},{"size":5685,"mtime":1678439795865,"results":"31","hashOfConfig":"20"},{"size":558,"mtime":1677166786992,"results":"32","hashOfConfig":"20"},{"size":1632,"mtime":1678438312645,"results":"33","hashOfConfig":"20"},{"size":1020,"mtime":1678442660207,"results":"34","hashOfConfig":"20"},{"size":354,"mtime":1677501079914,"results":"35","hashOfConfig":"20"},{"size":369,"mtime":1678436537210,"results":"36","hashOfConfig":"20"},{"size":271,"mtime":1678436530849,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1w1hm80",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\index.js",[],[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\reportWebVitals.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\App.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\Hooks.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\State.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\pages\\Detail.js",["96"],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state1.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q3.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q2.js",["97"],[],"import { useState } from \"react\";\r\n\r\nfunction Q2() {\r\n  const arr = [];\r\n  const [forceRender, setForceRender] = useState(false);\r\n\r\n  const onAddList = () => {\r\n    setForceRender((prev) => !prev);\r\n    arr.push();\r\n  };\r\n\r\n  /* \r\n    문제2\r\n\r\n    2-1)\r\n        useRef에 관련한 문제입니다.\r\n\r\n        추가 버튼을 누르면 input에 있던 value는 배열 arr에 추가됩니다.\r\n        그러나, 추가 버튼을 누를 때마다 강제 랜더링 상태가 무조건 적으로 업데이트 됩니다.\r\n\r\n        이러한 상황에서 제출버튼을 누르면\r\n\r\n        지금까지 추가하였던 목록 배열(arr)이 \r\n        <ul>의 li의 항목으로 추가되어야합니다.\r\n\r\n        만약 제출되었을 때 아무런 항목이 없다면\r\n        <p>제출된 목록이 없습니다</p>이 노출되어야하며\r\n\r\n        제출된 항목이 있다면\r\n        <ul>만 노출되어야 합니다\r\n\r\n        이를 useRef의 특성을 고려하여 풀이해보세요 :)\r\n\r\n    2-2)\r\n        문제 2-2는 변경 버튼을 클릭하면\r\n        p태그의 색상이 다른 색상으로 변경됩니다.\r\n        \r\n        이는 state를 사용하는 것이 가장 올바른 방법이지만\r\n        어를 사용할 수 없는 어쩔 수 없는 상황에 놓여있습니다.\r\n\r\n        따라서 useRef는 사용하여 해당 문구의 색상을 변경해보세요 :)\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <h1>문제2</h1>\r\n      <div>\r\n        <h2>문제 2-1</h2>\r\n        <p>\r\n          <input />\r\n        </p>\r\n        <p>\r\n          <button onClick={onAddList}>추가</button>\r\n        </p>\r\n        <p>\r\n          <button>제출</button>\r\n        </p>\r\n\r\n        <p>제출된 목록이 없습니다</p>\r\n        <ul>{/* -- list -- */}</ul>\r\n      </div>\r\n      <div>\r\n        <h2>문제 2-2</h2>\r\n        <p> 이 문구는 아래 버튼을 누르면 색상이 바뀝니다</p>\r\n        <button>변경</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q2;\r\n","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\1.basic\\q1.js",["98","99"],[],"import { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Q1() {\r\n    /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n  \r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n        \r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n    const [input, setInput] = useState(false);\r\n    const textRef = useRef(null);\r\n    const handleOnChange = (e) => {\r\n        const { value, placeholder } = e.target;\r\n        if (placeholder == value) {\r\n            setInput(true);\r\n            // handleCheck();\r\n        } else if (placeholder !== value) {\r\n            setInput(false);\r\n            // handleCheck();\r\n        }\r\n    };\r\n\r\n    // const handleCheck = (e) => {\r\n    //     if (input) {\r\n    //         e.target.innerText = '올바르게 입력하였습니다' 흐...;\r\n    //     } else if (!input) {\r\n    //         e.target.innerText = '올바르지 않습니다.';\r\n    //     }\r\n    // };\r\n    // const handleChangeColor = (e) => {\r\n    //     if (input == e.target.placeholder) {\r\n    //     } else if (input !== e.target.placeholder) {\r\n    //         textRef.current.style.color = 'red';\r\n    //         textRef.current.innerText = '올바르게 글을 작성해주세요';\r\n    //     }\r\n    // };\r\n    const [form, setForm] = useState(false);\r\n    // const pRef = useRef(null);\r\n\r\n    const handleClickForm = (e) => {\r\n        setForm((form) => !form);\r\n        handleChangeText(e);\r\n    };\r\n    const handleChangeText = (e) => {\r\n        if (form) {\r\n            e.target.innerText = '보이기';\r\n        } else {\r\n            e.target.innerText = '숨기기';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <div>\r\n                <h2>문제1-1.</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={'김성용'}\r\n                    style={{ textAlign: 'center' }}\r\n                    onChange={handleOnChange}\r\n                />\r\n                <S.Message state={input}>\r\n                    {input ? '올바르게 입력하셨습니다' : '올바르지 않습니다'}\r\n                </S.Message>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>문제1-2. </h2>\r\n                <button /*ref={pRef}*/ onClick={handleClickForm}>보이기</button>\r\n                {form && <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n    color: ${({ state }) => (state ? 'green' : 'red')};\r\n`;\r\n\r\nconst S = {\r\n    Message,\r\n};\r\n","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state3.js",["100","101"],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\state2.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\1.basic\\q3components.js",["102"],[],"import { useEffect, useRef } from 'react';\r\n\r\nfunction Q3components({ setCount }) {\r\n    const CountRef = useRef();\r\n    useEffect(() => {\r\n        CountRef.current = setInterval(() => {\r\n            setCount((prev) => prev + 1);\r\n        }, 2000);\r\n        // 컴포넌트가 처음 보였을 때\r\n\r\n        // 컴포넌트가 안보였을 때\r\n        return () => {\r\n            clearInterval(CountRef.current);\r\n            setCount(0);\r\n        };\r\n    }, []);\r\n    return <div> 🏃‍♂️ 줄넘기 ... ing </div>;\r\n}\r\nexport default Q3components;\r\n","C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\2.state\\comment.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\components\\2.state\\product.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\2.state\\Music\\List.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\useInputs.js",[],[],"C:\\Users\\ydy97\\OneDrive\\Documents\\카카오톡 받은 파일\\hookstest\\Hooks\\src\\hooks\\useInput.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":18,"column":8,"nodeType":"105","endLine":18,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":29,"column":11,"nodeType":"109","messageId":"110","endLine":29,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":32,"column":25,"nodeType":"114","messageId":"115","endLine":32,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":45,"column":26,"nodeType":"109","messageId":"110","endLine":45,"endColumn":41},{"ruleId":"107","severity":1,"message":"117","line":80,"column":7,"nodeType":"109","messageId":"110","endLine":80,"endColumn":8},{"ruleId":"103","severity":1,"message":"118","line":16,"column":8,"nodeType":"105","endLine":16,"endColumn":10,"suggestions":"119"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productNumber' and 'products'. Either include them or remove the dependency array.","ArrayExpression",["120"],"no-unused-vars","'forceRender' is assigned a value but never used.","Identifier","unusedVar","'textRef' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setProductLists' is assigned a value but never used.","'S' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCount'. Either include it or remove the dependency array. If 'setCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["121"],{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [productNumber, products]",{"range":"126","text":"127"},"Update the dependencies array to be: [setCount]",{"range":"128","text":"129"},[592,594],"[productNumber, products]",[419,421],"[setCount]"]